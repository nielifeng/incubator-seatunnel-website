"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[1239],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return g}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),s=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(t),g=r,d=m["".concat(o,".").concat(g)]||m[g]||u[g]||i;return t?a.createElement(d,l(l({ref:n},c),{},{components:t})):a.createElement(d,l({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2382:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),l=["components"],p={},o="\u63d2\u4ef6\u5f00\u53d1",s={unversionedId:"development/development",id:"development/development",title:"\u63d2\u4ef6\u5f00\u53d1",description:"\u63d2\u4ef6\u4f53\u7cfb\u4ecb\u7ecd",source:"@site/docs/development/development.md",sourceDirName:"development",slug:"/development/",permalink:"/docs/development/",editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/docs/development/development.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tidb",permalink:"/docs/configuration/output-plugins/Tidb"},next:{title:"\u6df1\u5165 seatunnel",permalink:"/docs/internal/"}},c=[{value:"\u63d2\u4ef6\u4f53\u7cfb\u4ecb\u7ecd",id:"\u63d2\u4ef6\u4f53\u7cfb\u4ecb\u7ecd",children:[{value:"Input",id:"input",children:[],level:3},{value:"Filter",id:"filter",children:[],level:3},{value:"Output",id:"output",children:[],level:3}],level:2},{value:"\u51c6\u5907\u5de5\u4f5c",id:"\u51c6\u5907\u5de5\u4f5c",children:[],level:2},{value:"\u4e00\u3001 \u65b0\u5efapom.xml",id:"\u4e00-\u65b0\u5efapomxml",children:[],level:2},{value:"\u4e8c\u3001 \u5b9e\u73b0\u81ea\u5df1\u7684\u65b9\u6cd5",id:"\u4e8c-\u5b9e\u73b0\u81ea\u5df1\u7684\u65b9\u6cd5",children:[{value:"Input(\u5b9e\u65f6\u6d41)",id:"input\u5b9e\u65f6\u6d41",children:[],level:3},{value:"Filter",id:"filter-1",children:[],level:3},{value:"Output",id:"output-1",children:[],level:3},{value:"UDF",id:"udf",children:[],level:3}],level:2},{value:"\u4e09\u3001 \u6253\u5305\u4f7f\u7528",id:"\u4e09-\u6253\u5305\u4f7f\u7528",children:[],level:2}],u={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u63d2\u4ef6\u5f00\u53d1"},"\u63d2\u4ef6\u5f00\u53d1"),(0,i.kt)("h2",{id:"\u63d2\u4ef6\u4f53\u7cfb\u4ecb\u7ecd"},"\u63d2\u4ef6\u4f53\u7cfb\u4ecb\u7ecd"),(0,i.kt)("p",null,"seatunnel\u63d2\u4ef6\u5206\u4e3a\u4e09\u90e8\u5206\uff0c",(0,i.kt)("strong",{parentName:"p"},"Input"),"\u3001",(0,i.kt)("strong",{parentName:"p"},"Filter"),"\u548c",(0,i.kt)("strong",{parentName:"p"},"Output")),(0,i.kt)("h3",{id:"input"},"Input"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Input"),"\u8d1f\u8d23\u5c06\u5916\u90e8\u6570\u636e\u6e90\u7684\u6570\u636e\u8f6c\u5316\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"DStream[(String, String)]")),(0,i.kt)("h3",{id:"filter"},"Filter"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Filter"),"\u662f",(0,i.kt)("a",{parentName:"p",href:"http://spark.apache.org/docs/latest/rdd-programming-guide.html#transformations"},"transform"),"\u64cd\u4f5c\uff0c\u8d1f\u8d23\u5bf9Dataset","[Row]","\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u64cd\u4f5c"),(0,i.kt)("h3",{id:"output"},"Output"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Output"),"\u662f",(0,i.kt)("a",{parentName:"p",href:"http://spark.apache.org/docs/latest/rdd-programming-guide.html#actions"},"action"),"\u64cd\u4f5c\uff0c\u8d1f\u8d23\u5c06Dataset","[Row]","\u8f93\u51fa\u5230\u5916\u90e8\u6570\u636e\u6e90\u6216\u8005\u6253\u5370\u5230\u7ec8\u7aef"),(0,i.kt)("h2",{id:"\u51c6\u5907\u5de5\u4f5c"},"\u51c6\u5907\u5de5\u4f5c"),(0,i.kt)("p",null,"seatunnel\u652f\u6301Java/Scala\u4f5c\u4e3a\u63d2\u4ef6\u5f00\u53d1\u8bed\u8a00\uff0c\u5176\u4e2d",(0,i.kt)("strong",{parentName:"p"},"Input"),"\u63d2\u4ef6\u63a8\u8350\u4f7f\u7528Scala\u4f5c\u4e3a\u5f00\u53d1\u8bed\u8a00\uff0c\u5176\u4f59\u7c7b\u578b\u63d2\u4ef6Java\u548cScala\u7686\u53ef\u3002"),(0,i.kt)("p",null,"\u65b0\u5efa\u4e00\u4e2aJava/Scala\u9879\u76ee\uff0c\u6216\u8005\u53ef\u4ee5\u76f4\u63a5\u62c9\u53d6",(0,i.kt)("a",{parentName:"p",href:"https://github.com/InterestingLab/seatunnel-filter-example"},"seatunnel-filter-example"),"\uff0c\u7136\u540e\u5728\u6b64\u9879\u76ee\u4e0a\u8fdb\u884c\u4fee\u6539"),(0,i.kt)("h2",{id:"\u4e00-\u65b0\u5efapomxml"},"\u4e00\u3001 \u65b0\u5efapom.xml"),(0,i.kt)("p",null,"\u53c2\u8003\u6587\u4ef6",(0,i.kt)("a",{parentName:"p",href:"https://github.com/InterestingLab/seatunnel-filter-example/blob/master/pom.xml"},"pom.xml")),(0,i.kt)("p",null,"\u5c06seatunnel\u63d0\u4f9b\u7684\u63a5\u53e3\u52a0\u5165\u9879\u76ee\u7684\u4f9d\u8d56\u4e2d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>io.github.interestinglab.seatunnel</groupId>\n    <artifactId>seatunnel-apis_2.11</artifactId>\n    <version>1.1.0</version>\n</dependency>\n")),(0,i.kt)("h2",{id:"\u4e8c-\u5b9e\u73b0\u81ea\u5df1\u7684\u65b9\u6cd5"},"\u4e8c\u3001 \u5b9e\u73b0\u81ea\u5df1\u7684\u65b9\u6cd5"),(0,i.kt)("h3",{id:"input\u5b9e\u65f6\u6d41"},"Input(\u5b9e\u65f6\u6d41)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u65b0\u5efa\u4e00\u4e2a\u7c7b\uff0c\u5e76\u7ee7\u627f",(0,i.kt)("strong",{parentName:"p"},"seatunnel-apis"),"\u63d0\u4f9b\u7684\u7236\u7c7b",(0,i.kt)("inlineCode",{parentName:"p"},"BaseInput")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"class ScalaHdfs extends BaseStreamingInput {\n\n  var config: Config = ConfigFactory.empty()\n\n  /**\n    * Set Config.\n    **/\n  override def setConfig(config: Config): Unit = {\n    this.config = config\n  }\n\n  /**\n    * Get Config.\n    **/\n  override def getConfig(): Config = {\n    this.config\n  }\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u91cd\u5199\u7236\u7c7b\u5b9a\u4e49\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"checkConfig"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"prepare"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"getDstream"),"\u65b9\u6cd5"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"override def checkConfig(): (Boolean, String) = {}\noverride def prepare(spark: SparkSession): Unit = {}\noverride def getDStream(ssc: StreamingContext): DStream[(String, String)] = {}\n\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Input"),"\u63d2\u4ef6\u5728\u8c03\u7528\u65f6\u4f1a\u5148\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"checkConfig"),"\u65b9\u6cd5\u6838\u5bf9\u8c03\u7528\u63d2\u4ef6\u65f6\u4f20\u5165\u7684\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u7136\u540e\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"prepare"),"\u65b9\u6cd5\u914d\u7f6e\u53c2\u6570\u7684\u7f3a\u7701\u503c\u4ee5\u53ca\u521d\u59cb\u5316\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6700\u540e\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"getStream"),"\u65b9\u6cd5\u5c06\u5916\u90e8\u6570\u636e\u6e90\u8f6c\u6362\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"DStream[(String, String)]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Scala\u7248\u672c",(0,i.kt)("strong",{parentName:"p"},"Input"),"\u63d2\u4ef6\u5b9e\u73b0\u53c2\u7167",(0,i.kt)("a",{parentName:"p",href:"https://github.com/InterestingLab/seatunnel-filter-example/blob/master/src/main/scala/org/interestinglab/seatunnel/input/ScalaHdfs.scala"},"ScalaHdfs")))),(0,i.kt)("h3",{id:"filter-1"},"Filter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u65b0\u5efa\u4e00\u4e2a\u7c7b\uff0c\u5e76\u7ee7\u627f",(0,i.kt)("strong",{parentName:"li"},"seatunnel-apis"),"\u63d0\u4f9b\u7684\u7236\u7c7b",(0,i.kt)("inlineCode",{parentName:"li"},"BaseFilter"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Scala"},"class ScalaSubstring extends BaseFilter {\n\n  var config: Config = ConfigFactory.empty()\n\n  /**\n    * Set Config.\n    **/\n  override def setConfig(config: Config): Unit = {\n    this.config = config\n  }\n\n  /**\n    * Get Config.\n    **/\n  override def getConfig(): Config = {\n    this.config\n  }\n}\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Java"},"public class JavaSubstring extends BaseFilter {\n\n    private Config config;\n\n    @Override\n    public Config getConfig() {\n        return config;\n    }\n\n    @Override\n    public void setConfig(Config config) {\n        this.config = config;\n    }\n}\n"))),(0,i.kt)("li",{parentName:"ul"},"\u91cd\u5199\u7236\u7c7b\u5b9a\u4e49\u7684",(0,i.kt)("inlineCode",{parentName:"li"},"checkConfig"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"prepare"),"\u548c",(0,i.kt)("inlineCode",{parentName:"li"},"process"),"\u65b9\u6cd5",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Scala"},"override def checkConfig(): (Boolean, String) = {}\noverride def prepare(spark: SparkSession): Unit = {}\noverride def process(spark: SparkSession, ds: Dataset[Row]): Dataset[Row] = {}\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Java"},"@Override\npublic Tuple2<Object, String> checkConfig() {}\n@Override\npublic void prepare(SparkSession spark, StreamingContext ssc) {}\n@Override\npublic Dataset<Row> process(SparkSession spark, Dataset<Row> df) {}\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Filter"),"\u63d2\u4ef6\u5728\u8c03\u7528\u65f6\u4f1a\u5148\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"li"},"checkConfig"),"\u65b9\u6cd5\u6838\u5bf9\u8c03\u7528\u63d2\u4ef6\u65f6\u4f20\u5165\u7684\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u7136\u540e\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"prepare"),"\u65b9\u6cd5\u914d\u7f6e\u53c2\u6570\u7684\u7f3a\u7701\u503c\u4ee5\u53ca\u521d\u59cb\u5316\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6700\u540e\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"process"),"\u65b9\u6cd5\u5bf9 ",(0,i.kt)("strong",{parentName:"li"},"Dataset","[Row]")," \u683c\u5f0f\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002"),(0,i.kt)("li",{parentName:"ul"},"Java\u7248\u672c",(0,i.kt)("strong",{parentName:"li"},"Filter"),"\u63d2\u4ef6\u7684\u5b9e\u73b0\u53c2\u7167",(0,i.kt)("a",{parentName:"li",href:"https://github.com/InterestingLab/seatunnel-filter-example/blob/master/src/main/java/org/interestinglab/seatunnel/filter/JavaSubstring.java"},"JavaSubstring"),"\uff0cScala\u7248\u672c",(0,i.kt)("strong",{parentName:"li"},"Filter"),"\u63d2\u4ef6\u7684\u5b9e\u73b0\u53c2\u7167",(0,i.kt)("a",{parentName:"li",href:"https://github.com/InterestingLab/seatunnel-filter-example/blob/master/src/main/scala/org/interestinglab/seatunnel/filter/ScalaSubstring.scala"},"ScalaSubstring"))))),(0,i.kt)("h3",{id:"output-1"},"Output"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u65b0\u5efa\u4e00\u4e2a\u7c7b\uff0c\u5e76\u7ee7\u627f",(0,i.kt)("strong",{parentName:"li"},"seatunnel-apis"),"\u63d0\u4f9b\u7684\u7236\u7c7b",(0,i.kt)("inlineCode",{parentName:"li"},"BaseOutput"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Scala"},"class ScalaStdout extends BaseOutput {\n\n\n  var config: Config = ConfigFactory.empty()\n\n  /**\n    * Set Config.\n    **/\n  override def setConfig(config: Config): Unit = {\n    this.config = config\n  }\n\n  /**\n    * Get Config.\n    **/\n  override def getConfig(): Config = {\n    this.config\n  }\n}\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Java"},"public class JavaStdout extends BaseOutput {\n\n    private Config config;\n\n    @Override\n    public Config getConfig() {\n        return config;\n    }\n\n    @Override\n    public void setConfig(Config config) {\n        this.config = config;\n    }\n}\n"))),(0,i.kt)("li",{parentName:"ul"},"\u91cd\u5199\u7236\u7c7b\u5b9a\u4e49\u7684",(0,i.kt)("inlineCode",{parentName:"li"},"checkConfig"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"prepare"),"\u548c",(0,i.kt)("inlineCode",{parentName:"li"},"process"),"\u65b9\u6cd5",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Scala"},"override def checkConfig(): (Boolean, String) = {}\noverride def prepare(spark: SparkSession): Unit = {}\noverride def process(spark: SparkSession, ds: Dataset[Row]): Dataset[Row] = {}\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Java"},"@Override\npublic Tuple2<Object, String> checkConfig() {}\n@Override\npublic void prepare(SparkSession spark) {}\n@Override\npublic Dataset<Row> process(SparkSession spark, Dataset<Row> ds) {}\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Output"),"\u63d2\u4ef6\u8c03\u7528\u7ed3\u6784\u4e0e",(0,i.kt)("strong",{parentName:"li"},"Filter"),"\u63d2\u4ef6\u76f8\u4f3c\u3002\u5728\u8c03\u7528\u65f6\u4f1a\u5148\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"li"},"checkConfig"),"\u65b9\u6cd5\u6838\u5bf9\u8c03\u7528\u63d2\u4ef6\u65f6\u4f20\u5165\u7684\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u7136\u540e\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"prepare"),"\u65b9\u6cd5\u914d\u7f6e\u53c2\u6570\u7684\u7f3a\u7701\u503c\u4ee5\u53ca\u521d\u59cb\u5316\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6700\u540e\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"process"),"\u65b9\u6cd5\u5c06 ",(0,i.kt)("strong",{parentName:"li"},"Dataset","[Row]")," \u683c\u5f0f\u6570\u636e\u8f93\u51fa\u5230\u5916\u90e8\u6570\u636e\u6e90\u3002"),(0,i.kt)("li",{parentName:"ul"},"Java\u7248\u672c",(0,i.kt)("strong",{parentName:"li"},"Output"),"\u63d2\u4ef6\u7684\u5b9e\u73b0\u53c2\u7167",(0,i.kt)("a",{parentName:"li",href:"https://github.com/InterestingLab/seatunnel-filter-example/blob/master/src/main/java/org/interestinglab/seatunnel/output/JavaStdout.java"},"JavaStdout"),"\uff0cScala\u7248\u672c",(0,i.kt)("strong",{parentName:"li"},"Output"),"\u63d2\u4ef6\u7684\u5b9e\u73b0\u53c2\u7167",(0,i.kt)("a",{parentName:"li",href:"https://github.com/InterestingLab/seatunnel-filter-example/blob/master/src/main/scala/org/interestinglab/seatunnel/output/ScalaStdout.scala"},"ScalaStdout"))))),(0,i.kt)("h3",{id:"udf"},"UDF"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u65b0\u5efa\u4e00\u4e2a\u7c7b\uff0c\u5e76\u7ee7\u627f",(0,i.kt)("strong",{parentName:"p"},"seatunnel-apis"),"\u63d0\u4f9b\u7684\u7236\u7c7b",(0,i.kt)("inlineCode",{parentName:"p"},"BaseFilter")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Scala"},"class ScalaSubstring extends BaseFilter {\n\n  var config: Config = ConfigFactory.empty()\n\n  /**\n    * Set Config.\n    **/\n  override def setConfig(config: Config): Unit = {\n    this.config = config\n  }\n\n  /**\n    * Get Config.\n    **/\n  override def getConfig(): Config = {\n    this.config\n  }\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u91cd\u5199\u7236\u7c7b\u5b9a\u4e49\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"checkConfig"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"prepare"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"getUdfList"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"process"),"\u65b9\u6cd5,\u8fd9\u91cc\u53ea\u4ecb\u7ecd",(0,i.kt)("inlineCode",{parentName:"p"},"getUdfList"),"\u4ee5\u53ca",(0,i.kt)("inlineCode",{parentName:"p"},"process"),"\u4e24\u4e2a\u65b9\u6cd5"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Scala"},'override def getUdfList(): List[(String, UserDefinedFunction)] = {\n  val func = udf((s: String, pos: Int, len: Int) => s.substring(pos, pos+len))\n  List(("my_sub", func))\n}\noverride def process(spark: SparkSession, ds: Dataset[Row]): Dataset[Row] = {\n  val srcField = config.getString("source_field")\n  val targetField = config.getString("target_field")\n  val pos = config.getInt("pos")\n  val len = config.getInt("len")\n  val func = getUdfList().get(0)._2\n  df.withColumn(targetField, func(col(srcField), lit(pos), lit(len)))\n}\n')),(0,i.kt)("p",{parentName:"li"},"  \u5177\u4f53UDF\u63d2\u4ef6\u5f00\u53d1\u5b8c\u6574\u6848\u4f8b\u53c2\u7167",(0,i.kt)("a",{parentName:"p",href:"https://github.com/InterestingLab/seatunnel-example/blob/rickyhuo.fea.udf/src/main/scala/org/interestinglab/seatunnel/filter/ScalaSubstring.scala#L15"},"ScalaSubstring"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u65b0\u5efaMETA-INF/services"),(0,i.kt)("p",{parentName:"li"},"  seatunnel\u4f1a\u5229\u7528",(0,i.kt)("strong",{parentName:"p"},"Service loader"),"\u673a\u5236\u5c06\u5b9e\u73b0",(0,i.kt)("inlineCode",{parentName:"p"},"io.github.interestinglab.seatunnel.apis.BaseFilter"),"\u7684\u65b9\u6cd5\u6839\u636e",(0,i.kt)("inlineCode",{parentName:"p"},"getUdfList"),"\u8fd4\u56de\u7684\u65b9\u6cd5\u6ce8\u518c\u4e3aUDF\uff0c\u5982\u679c\u63a5\u53e3\u5b9e\u73b0\u7c7b\u4e0d\u5728services\u4e2d\u6ce8\u660e\uff0c\u5c06\u4e0d\u4f1a\u6ce8\u518c\u4e3aUDF\u3002"),(0,i.kt)("p",{parentName:"li"},"  \u6848\u4f8b\u4e2d\u7684",(0,i.kt)("a",{parentName:"p",href:"https://github.com/InterestingLab/seatunnel-example/blob/master/src/main/resources/META-INF/services/io.github.interestinglab.seatunnel.apis.BaseFilter"},"META-INF")))),(0,i.kt)("h2",{id:"\u4e09-\u6253\u5305\u4f7f\u7528"},"\u4e09\u3001 \u6253\u5305\u4f7f\u7528"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u6253\u5305"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"mvn package"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5c06\u6253\u5305\u597d\u7684Jar\u5305\u653e\u5230seatunnel ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins"),"\u76ee\u5f55\u4e0b"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd seatunnel-1.1.0\nmkdir -p plugins/my_plugins/lib\ncd plugins/my_plugins/lib\n")),(0,i.kt)("p",{parentName:"li"},"seatunnel\u9700\u8981\u5c06\u7b2c\u4e09\u65b9Jar\u5305\u653e\u5230\uff0c\u5fc5\u987b\u65b0\u5efa",(0,i.kt)("strong",{parentName:"p"},"lib"),"\u6587\u4ef6\u5939"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"plugins/your_plugin_name/lib/your_jar_name")),(0,i.kt)("p",{parentName:"li"},"\u5176\u4ed6\u6587\u4ef6\u653e\u5230"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"plugins/your_plugin_name/files/your_file_name"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\u63d2\u4ef6"),(0,i.kt)("p",{parentName:"li"},"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d2\u4ef6\u7684\u5b8c\u6574\u793a\u4f8b\uff0c\u5e76\u5c06\u5176\u653e\u81f3",(0,i.kt)("inlineCode",{parentName:"p"},"config/application.conf")),(0,i.kt)("p",{parentName:"li"},"\u7531",(0,i.kt)("inlineCode",{parentName:"p"},"Fake"),"\u63d2\u4ef6\u751f\u6210\u6d4b\u8bd5\u6570\u636e\uff0c\u8fdb\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"Split"),"\u8fdb\u884c\u5206\u5272\u540e\uff0c\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d2\u4ef6",(0,i.kt)("inlineCode",{parentName:"p"},"ScalaSubstring"),"\u8fdb\u884c\u5b57\u7b26\u4e32\u622a\u53d6\uff0c\u6700\u540e\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d2\u4ef6",(0,i.kt)("inlineCode",{parentName:"p"},"JavaStdout"),"\u6253\u5370\u5230\u7ec8\u7aef\u3002"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'spark {\n    spark.streaming.batchDuration = 5\n    spark.app.name = "seatunnel-sample"\n    spark.ui.port = 13000\n    spark.executor.instances = 2\n    spark.executor.cores = 1\n    spark.executor.memory = "1g"\n}\n\ninput {\n    fakeStream {\n        content = ["INFO : gary is 28 years old", "WARN : suwey is 16 years old"]\n        rate = 5\n    }\n}\n\nfilter {\n    split {\n        fields = ["log_level", "message"]\n        delimiter = ":"\n    }\n    sql = {\n        table_name = "tmp"\n        # \u4f7f\u7528UDF\n        sql = "select log_level, my_sub(message, 1, 3) from tmp"\n    }\n}\n\noutput {\n    org.interestinglab.seatunnel.output.JavaStdout {\n        limit = 2\n    }\n}\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u542f\u52a8seatunnel"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"./bin/start-seatunnel.sh --config config/application.conf --deploy-mode client --master local[2]\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u67e5\u770b\u7ed3\u679c"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"+---------+------------------+\n|log_level|UDF(message, 1, 3)|\n+---------+------------------+\n|INFO     |ary               |\n|INFO     |ary               |\n+---------+------------------+\nonly showing top 2 rows\n\n")))))}m.isMDXComponent=!0}}]);